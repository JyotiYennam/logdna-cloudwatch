version: 2
jobs:
  publish_python:
    docker:
      - image: circleci/python:3.5
    steps:
      - checkout
      - run: sudo pip install awscli
      - run: cd python && zip lambda.zip logdna_cloudwatch.py
      - run: aws s3 cp python/lambda.zip s3://repo.logdna.com/integrations/cloudwatch/lambda.zip
  test_nodejs:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run: cd node.js && npm install .
      - run: cd node.js && npm install jest eslint --no-save .
      - run: cd node.js && node_modules/.bin/jest tests/
      - run: cd node.js && node_modules/.bin/eslint index.js
  build_nodejs:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run:
          name: Build CloudWatchLogs
          command: |
            cd ./node.js && npm install .
            zip logdna_cloudwatchlogs.zip -r node_modules/ index.js constants.js
      - persist_to_workspace:
          root: .
          paths:
            - ./node.js/logdna_cloudwatchlogs.zip
  publish_nodejs:
    docker:
      - image: circleci/python:3.5
    steps:
      - attach_workspace:
          at: .
      - run: sudo pip install awscli
      - run: aws s3 cp ./node.js/logdna_cloudwatchlogs.zip s3://repo.logdna.com/integrations/lambdas/logdna_cloudwatchlogs.zip
workflows:
  version: 2
  publish:
    jobs:
      - publish_python:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^publish(-python)?$/
      - test_nodejs:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^publish(-nodejs)?$/
      - build_nodejs:
          requires:
            - test_nodejs
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^publish(-nodejs)?$/
      - publish_nodejs:
          requires:
            - build_nodejs
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^publish(-nodejs)?$/